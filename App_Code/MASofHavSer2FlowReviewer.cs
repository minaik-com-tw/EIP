//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This class library contains all the custom flow reviewer generating logic(s)
using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Data.SqlClient;

namespace MASofHavSer2.Flowwork {
    
    
    public class MASofHavSer2FlowNode1Reviewer {

        
        
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
            string AppUid = ht["ID1"].ToString();

            
            
            rc.Add(new System.Guid(AppUid));

            return rc;
        }
    }
    
    public class MASofHavSer2FlowNode2Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();


            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
            string AppUid = ht["ID2"].ToString();
            rc.Add(new System.Guid(AppUid));

            return rc;
        }
    }
    
    public class MASofHavSer2FlowNode3Reviewer {
        public static string oradb=System.Web.Configuration.WebConfigurationManager.ConnectionStrings["EIPAConnectionString"].ConnectionString; 
		
        //public static string oradb = "Data Source=WEB242;Initial Catalog=EIPA;Persist Security Info=True;User ID=smooth;Password=mat2009";
        //public static string oradb = "Integrated Security=SSPI;Initial Catalog=MISFlow;Data Source=MISNB\\SQLEXPRESS;";
        //對資料庫做新增/Update
        private void acttable(string sql)
        {
            SqlConnection conn1 = new SqlConnection(oradb);
            conn1.Open();

            SqlCommand ccom1 = new SqlCommand(sql, conn1);

            ccom1.ExecuteNonQuery();
            conn1.Close();

        }
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments) {
            string uid = "";
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            //MA 總公司MIS 主管
            SmoothEnterprise.Database.DataSet rs = new SmoothEnterprise.Database.DataSet(SmoothEnterprise.Database.DataSetType.OpenRead);
            rs.Open(" select  misdepart,uid from  MASpeDep  inner join dggroup on misdepart=id where plantid='MAT'  ");
            if (!rs.EOF)
            {
                uid = rs["uid"].ToString();
                rc.Add(new System.Guid(rs["uid"].ToString()));
            }
            rs.Close();

            string sq3 = "insert into  misbuffer2(caption)values('" + uid + "')";
            acttable(sq3);

            return rc;
        }
    }
    
    public class MASofHavSer2FlowNode4Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();

            //根據Flow Parameter中所設定的參數, 決定第三關審核人
            string CustomNode3Approver = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;

            object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter, "CustomNode3Approver");

            if (ht != null)
            {
                CustomNode3Approver = ht["CustomNode3Approver"].ToString();
                if (CustomNode3Approver != "")
                {
                    rc.Add(new System.Guid(CustomNode3Approver));
                }
            }


            return rc;
        }
    }
}
