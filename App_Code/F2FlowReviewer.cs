//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4206
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This class library contains all the custom flow reviewer generating logic(s)
namespace Flow2.Flowwork {


    public class F2FlowNode1Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USER = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USER = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }                  // USERTITLE1


            rc.Add(new System.Guid(USER), USERTITLE);
            //rc.Add(new System.Guid(USERA));
            return rc;
        }
    }

    public class F2FlowNode2Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USER = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USER = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }

            //rc.Add(USER, USERTITLE);
            rc.Add(new System.Guid(USER), USERTITLE);
            // rc.Add(new System.Guid(USERB));
            return rc;
        }
    }

    public class F2FlowNode3Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USER = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USER = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }

             
            rc.Add(new System.Guid(USER), USERTITLE);
            
            return rc;
        }
    }

}
