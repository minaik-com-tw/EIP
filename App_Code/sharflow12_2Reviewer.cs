//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3619
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This class library contains all the custom flow reviewer generating logic(s)
namespace sharflow12_2.Flowwork {

    public class sharflow12_2Node1Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            //SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            //rc.Add(new System.Guid("C0B9B4E4-312F-4282-9549-7651A830AD01"),"цHек");
            //return rc;

            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12_2Node2Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12_2Node3Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12_2Node4Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12_2Node5Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12_2Node6Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node7Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node8Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node9Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node10Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node11Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node12Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node13Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node14Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node15Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node16Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node17Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node18Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node19Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node20Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node21Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node22Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node23Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node24Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node25Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node26Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node27Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node28Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node29Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node30Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node31Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node32Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node33Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node34Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node35Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node36Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node37Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node38Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node39Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node40Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node41Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node42Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node43Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node44Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node45Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node46Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node47Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node48Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node49Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node50Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node51Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node52Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node53Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node54Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node55Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER9"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE9"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node56Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node57Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node58Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node59Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node60Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node61Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node62Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node63Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node64Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node65Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER9"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE9"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node66Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER10"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE10"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node67Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node68Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node69Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node70Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node71Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node72Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node73Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node74Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node75Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node76Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER9"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE9"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node77Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER10"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE10"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12_2Node78Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";

            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER11"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE11"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    //20121121 иs╝W║I┬Iд▄15ГМ----------------------------------------------------------------------------

    public class sharflow12_2Node79Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER0"].ToString();
                USERTITLE = ht["USERTITLE0"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node80Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node81Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node82Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node83Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node84Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node85Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER6"].ToString();
                USERTITLE = ht["USERTITLE6"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node86Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER7"].ToString();
                USERTITLE = ht["USERTITLE7"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node87Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER8"].ToString();
                USERTITLE = ht["USERTITLE8"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node88Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER9"].ToString();
                USERTITLE = ht["USERTITLE9"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node89Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER10"].ToString();
                USERTITLE = ht["USERTITLE10"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node90Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER11"].ToString();
                USERTITLE = ht["USERTITLE11"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node91Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER12"].ToString();
                USERTITLE = ht["USERTITLE12"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node92Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER0"].ToString();
                USERTITLE = ht["USERTITLE0"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node93Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node94Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node95Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node96Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node97Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node98Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER6"].ToString();
                USERTITLE = ht["USERTITLE6"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node99Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER7"].ToString();
                USERTITLE = ht["USERTITLE7"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node100Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER8"].ToString();
                USERTITLE = ht["USERTITLE8"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node101Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER9"].ToString();
                USERTITLE = ht["USERTITLE9"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node102Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER10"].ToString();
                USERTITLE = ht["USERTITLE10"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node103Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER11"].ToString();
                USERTITLE = ht["USERTITLE11"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node104Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER12"].ToString();
                USERTITLE = ht["USERTITLE12"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node105Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER13"].ToString();
                USERTITLE = ht["USERTITLE13"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node106Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER0"].ToString();
                USERTITLE = ht["USERTITLE0"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node107Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node108Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node109Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node110Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node111Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node112Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER6"].ToString();
                USERTITLE = ht["USERTITLE6"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node113Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER7"].ToString();
                USERTITLE = ht["USERTITLE7"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node114Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER8"].ToString();
                USERTITLE = ht["USERTITLE8"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node115Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER9"].ToString();
                USERTITLE = ht["USERTITLE9"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node116Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER10"].ToString();
                USERTITLE = ht["USERTITLE10"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node117Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER11"].ToString();
                USERTITLE = ht["USERTITLE11"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node118Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER12"].ToString();
                USERTITLE = ht["USERTITLE12"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node119Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER13"].ToString();
                USERTITLE = ht["USERTITLE13"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class sharflow12_2Node120Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER14"].ToString();
                USERTITLE = ht["USERTITLE14"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
}
