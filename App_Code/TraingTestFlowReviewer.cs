//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This class library contains all the custom flow reviewer generating logic(s)
namespace TraingTest.Flowwork {
    
    
    public class TraingTestFlowNode1Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER0"].ToString();
                USERTITLE = ht["USERTITLE0"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
    
    public class TraingTestFlowNode10Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            
            return rc;
        }
    }
    
    public class TraingTestFlowNode11Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()));
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA));
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode12Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode13Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode14Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode15Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode16Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()));
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA));
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode17Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode18Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode19Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode2Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()));
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA));
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode20Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode21Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER6"].ToString();
                USERTITLE = ht["USERTITLE6"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode22Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()));
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA));
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode23Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode24Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode25Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode26Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode27Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER6"].ToString();
                USERTITLE = ht["USERTITLE6"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode28Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER7"].ToString();
                USERTITLE = ht["USERTITLE7"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode29Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()));
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA));
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode3Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode30Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode31Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode32Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode33Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();
                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode34Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER6"].ToString();
                USERTITLE = ht["USERTITLE6"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode35Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER7"].ToString();
                USERTITLE = ht["USERTITLE7"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode36Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER8"].ToString();
                USERTITLE = ht["USERTITLE8"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode37Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()));
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA));
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode38Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode39Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode4Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()));
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA));
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode40Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode41Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode42Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER6"].ToString();
                USERTITLE = ht["USERTITLE6"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode43Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER7"].ToString();
                USERTITLE = ht["USERTITLE7"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode44Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER8"].ToString();
                USERTITLE = ht["USERTITLE8"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode45Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER9"].ToString();
                USERTITLE = ht["USERTITLE9"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }


    public class TraingTestFlowNode46Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()));
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA));
                }

            }
            return rc;
        }
    }

    
    public class TraingTestFlowNode5Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode6Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode7Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()));
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA));
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode8Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
    
    public class TraingTestFlowNode9Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();

                if (USERA == "人事F4")
                {
                    SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
                    ds.Open("SELECT id FROM dguser WHERE  logonid = 'yuhlin.wang'  or logonid ='lm.huang' or logonid ='elaine.chiu' or logonid ='yuhui.peng'");
                    while (!ds.EOF)
                    {
                        rc.Add(new System.Guid(ds["id"].ToString()), USERTITLE);
                        ds.MoveNext();
                    }

                }
                else
                {
                    rc.Add(new System.Guid(USERA), USERTITLE);
                }

            }
            return rc;
        }
    }
}
