//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4211
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This class library contains all the custom flow reviewer generating logic(s)
namespace MyDeputy.Flowwork {
    
    
    public class DuFlowNode1Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER0"].ToString();
                USERTITLE = ht["USERTITLE0"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;


        }
    }
    
    public class DuFlowNode1_1Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
    
    public class DuFlowNode2_1Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
    
    public class DuFlowNode2_2Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
    
    public class DuFlowNode3_1Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
    
    public class DuFlowNode3_2Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
    
    public class DuFlowNode3_3Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
    
    public class DuFlowNode4_1Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
    
    public class DuFlowNode4_2Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
    
    public class DuFlowNode4_3Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
    
    public class DuFlowNode4_4Reviewer {
        
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection Select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }
}
