//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3619
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This class library contains all the custom flow reviewer generating logic(s)
namespace sharflow12.Flowwork {

    public class sharflow12Node1Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            //SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            //rc.Add(new System.Guid("C0B9B4E4-312F-4282-9549-7651A830AD01"),"人事");
            //return rc;

            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12Node2Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            //SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            //rc.Add(new System.Guid("C0B9B4E4-312F-4282-9549-7651A830AD01"),"人事");
            //return rc;

            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12Node3Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            //SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            //rc.Add(new System.Guid("C0B9B4E4-312F-4282-9549-7651A830AD01"),"人事");
            //return rc;

            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12Node4Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12Node5Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12Node6Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node7Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }

            return rc;
        }
    }
    public class sharflow12Node8Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node9Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node10Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node11Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node12Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node13Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node14Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node15Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node16Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node17Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node18Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node19Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node20Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node21Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node22Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node23Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node24Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node25Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node26Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node27Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node28Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node29Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node30Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node31Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }

            return rc;
        }
    }
    public class sharflow12Node32Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
           
            return rc;
        }
    }
    public class sharflow12Node33Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            
            return rc;
        }
    }
    public class sharflow12Node34Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node35Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node36Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
             
            return rc;
        }
    }
    public class sharflow12Node37Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            
            return rc;
        }
    }
    public class sharflow12Node38Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
             
            return rc;
        }
    }
    public class sharflow12Node39Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node40Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node41Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node42Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node43Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node44Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node45Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node46Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node47Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node48Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node49Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node50Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node51Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node52Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node53Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node54Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node55Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER9"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE9"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node56Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node57Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node58Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node59Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node60Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node61Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node62Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node63Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node64Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node65Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER9"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE9"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node66Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER10"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE10"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node67Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node68Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node69Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node70Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node71Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node72Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node73Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node74Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node75Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node76Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER9"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE9"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node77Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER10"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE10"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node78Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER11"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE11"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    //20121121 新增截點至15個----------------------------------------------------------------------------

    public class sharflow12Node79Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node80Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node81Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node82Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node83Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node84Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node85Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node86Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node87Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node88Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER9"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE9"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node89Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER10"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE10"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node90Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER11"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE11"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12Node91Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER12"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE12"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }



    public class sharflow12Node92Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node93Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node94Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node95Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node96Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node97Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node98Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node99Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node100Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node101Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER9"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE9"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node102Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER10"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE10"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node103Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER11"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE11"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node104Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER12"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE12"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node105Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER13"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE13"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }


    public class sharflow12Node106Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER0"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE0"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node107Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER1"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE1"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node108Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER2"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE2"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node109Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER3"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE3"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node110Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER4"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE4"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node111Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER5"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE5"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node112Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER6"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE6"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node113Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER7"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE7"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node114Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER8"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE8"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node115Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER9"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE9"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node116Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER10"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE10"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node117Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER11"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE11"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node118Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER12"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE12"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }

    public class sharflow12Node119Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER13"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE13"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }
    public class sharflow12Node120Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                string[] UserList = ht["USER14"].ToString().Split('@');
                string[] TitleList = ht["USERTITLE14"].ToString().Split('@');
                int x = 0;

                foreach (string s in UserList)
                {
                    if (s != "")
                    {
                        if (TitleList.Length > x)
                            rc.Add(new System.Guid(s), TitleList[x]);
                        else
                            rc.Add(new System.Guid(s), " ");

                        x = x + 1;
                    }
                }
            }
            return rc;
        }
    }


 

}
