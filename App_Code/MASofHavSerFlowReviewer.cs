//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This class library contains all the custom flow reviewer generating logic(s)
using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Data.SqlClient;



namespace MASofHavSer.Flowwork {
    
    //直屬主管
    public class MASofHavSerFlowNode1Reviewer {

        /*public static string oradb = "Data Source=WEB242;Initial Catalog=EIPA;Persist Security Info=True;User ID=smooth;Password=mat2009";
        //public static string oradb = "Integrated Security=SSPI;Initial Catalog=MISFlow;Data Source=MISNB\\SQLEXPRESS;";
        //對資料庫做新增/Update
        private void acttable(string sql)
        {
            SqlConnection conn1 = new SqlConnection(oradb);
            conn1.Open();

            SqlCommand ccom1 = new SqlCommand(sql, conn1);

            ccom1.ExecuteNonQuery();
            conn1.Close();

        }

         */ 
        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments) {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();


            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
            string AppUid = ht["App"].ToString();

            
            
            rc.Add(new System.Guid(AppUid));

            string speuser = ht["speuser"].ToString();
            string needid = ht["nid"].ToString();
            if (needid!="N")
            {
                rc.Add(new System.Guid(speuser));  //準備給scott 用
            }

           // string sq3 = "insert into  misbuffer2(caption)values('" + needid + "')";
           // acttable(sq3);
            
             
            return rc;
        }
    }


    //總公司MIS 主管
    public class MASofHavSerFlowNode2Reviewer : System.Web.UI.Page
    {

        public static string oradb = "Data Source=EC;Initial Catalog=EIPA;Persist Security Info=True;User ID=smooth;Password=mat2009";
        //public static string oradb = "Integrated Security=SSPI;Initial Catalog=MISFlow;Data Source=MISNB\\SQLEXPRESS;";
        //對資料庫做新增/Update
        private void acttable(string sql)
        {
            SqlConnection conn1 = new SqlConnection(oradb);
            conn1.Open();

            SqlCommand ccom1 = new SqlCommand(sql, conn1);

            ccom1.ExecuteNonQuery();
            conn1.Close();

        }

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments)
        {
            string uid = "";
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            //MA 總公司MIS 主管
            /*SmoothEnterprise.Database.DataSet rs = new SmoothEnterprise.Database.DataSet(SmoothEnterprise.Database.DataSetType.OpenRead);
            rs.Open("SELECT   c.uid uid  FROM  dguser INNER JOIN  MASpeDep ON MASpeDep.plantid = dguser.comid INNER JOIN " +
                     " dggroup AS c ON MASpeDep.misdepart = c.id  WHERE  comid='MAT'");
            if (!rs.EOF)
            {
                uid = rs["uid"].ToString();
                rc.Add(new System.Guid(rs["uid"].ToString()));
            }
            rs.Close();

            string sq3 = "insert into  misbuffer2(caption)values('" + uid + "')";
            acttable(sq3);

            return rc;*/

            Uri uri = HttpContext.Current.Request.Url;
            string linkvalue = uri.PathAndQuery;
            string remark = "";

            SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
            ds.Open("select TOP (1)  caption,id,comid from   misbuffer where requesturl='" + linkvalue + "' order by  id desc");
            if (!ds.EOF) {
                //為網際網路下載需求,需要經過scott 審核 
               /* if (ds["comid"].ToString().Trim() == "MAT")
                {
                    rc.Add(new System.Guid("0dc215c7-0043-4cd6-ac6e-659ecdc88994"));
                } */
                
                rc.Add(new System.Guid(ds["caption"].ToString()));
                 
               
            }
            return rc;
        }
    }

    // 子廠Member
    public class MASofHavSerFlowNode7Reviewer : System.Web.UI.Page
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();

            //根據Flow Parameter中所設定的參數, 決定第三關審核人
            string CustomNode3Approver = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;

            object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter, "CustomNode3Approver");

            if (ht != null)
            {
                CustomNode3Approver = ht["CustomNode3Approver"].ToString();
                if (CustomNode3Approver != "")
                {
                    rc.Add(new System.Guid(CustomNode3Approver));
                }
            }


            return rc;
        }
    }




   // 子廠主管

    public class MASofHavSerFlowNode3Reviewer : System.Web.UI.Page
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();

            Uri uri = HttpContext.Current.Request.Url;
            string linkvalue = uri.PathAndQuery;
            string remark = "";

            SmoothEnterprise.Database.DataSet ds = new SmoothEnterprise.Database.DataSet();
            ds.Open("select TOP (1)  caption,id from   misbuffer where requesturl='" + linkvalue + "' order by  id desc");
            if (!ds.EOF) rc.Add(new System.Guid(ds["caption"].ToString()));
            return rc;

        }
    }
      
    //總公司MIS  member
    public class MASofHavSerFlowNode4Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection select(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            string CustomNode3Approver = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;

            object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter, "CustomNode3Approver");

            if (ht != null)
            {
                CustomNode3Approver = ht["CustomNode3Approver"].ToString();
                if (CustomNode3Approver != "")
                {
                    rc.Add(new System.Guid(CustomNode3Approver));
                }
            }


            return rc;
        }
    }


   }
