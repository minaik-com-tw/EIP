//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This class library contains all the custom flow reviewer generating logic(s)
namespace AXMT610_1.Flowwork {

    public class FlowNode1Reviewer 
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER0"].ToString();
                USERTITLE = ht["USERTITLE0"].ToString();

            }
            //rc.Add(new System.Guid(USERA));
            rc.Add(new System.Guid("608B09C6-8525-4907-9227-1AE107B14C8E"), "¸g²z");
            return rc;
        }
    }



    public class FlowNode2Reviewer 
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class FlowNode3Reviewer 
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class FlowNode4Reviewer 
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class FlowNode5Reviewer 
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class FlowNode6Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class FlowNode7Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class FlowNode8Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class FlowNode9Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class FlowNode10Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }
    }

    public class FlowNode11Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode12Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode13Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode14Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }


    public class FlowNode15Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode16Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode17Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode18Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode19Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode20Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode21Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER6"].ToString();
                USERTITLE = ht["USERTITLE6"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode22Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode23Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode24Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode25Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode26Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode27Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER6"].ToString();
                USERTITLE = ht["USERTITLE6"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode28Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER7"].ToString();
                USERTITLE = ht["USERTITLE7"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode29Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER1"].ToString();
                USERTITLE = ht["USERTITLE1"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode30Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER2"].ToString();
                USERTITLE = ht["USERTITLE2"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode31Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER3"].ToString();
                USERTITLE = ht["USERTITLE3"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode32Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER4"].ToString();
                USERTITLE = ht["USERTITLE4"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode33Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER5"].ToString();
                USERTITLE = ht["USERTITLE5"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode34Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER6"].ToString();
                USERTITLE = ht["USERTITLE6"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode35Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER7"].ToString();
                USERTITLE = ht["USERTITLE7"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }

    public class FlowNode36Reviewer
    {

        public virtual SmoothEnterprise.Flowwork.Control.FlowReviewerCollection SelectUser(System.Guid requestuid, object parameter, object arguments)
        {
            SmoothEnterprise.Flowwork.Control.FlowReviewerCollection rc = new SmoothEnterprise.Flowwork.Control.FlowReviewerCollection();
            // Put your code to generate custom reviewers
            // Example :
            // rc.Add(userid);
            // rc.Add(userid,text);
            //  
            // Get parameter value(s)
            // Example :
            // object value = SmoothEnterprise.Flowwork.Control.FlowReviewer.GetParameter(parameter,key);
            string USERA = "";
            string USERTITLE = "";
            System.Collections.Hashtable ht = parameter as System.Collections.Hashtable;
            if (ht != null)
            {
                USERA = ht["USER8"].ToString();
                USERTITLE = ht["USERTITLE8"].ToString();
            }
            rc.Add(new System.Guid(USERA), USERTITLE);
            return rc;
        }


    }


}
